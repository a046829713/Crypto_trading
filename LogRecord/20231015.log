2023-10-15 19:54 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 378, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 336, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 197, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 136, in add_data
    pf = Record_Orders(strategy).getpf()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\run_model.py", line 23, in __init__
    prices = app.get_test_net_work_data(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\DataFeature.py", line 68, in get_test_net_work_data
    df = pd.read_csv(f'DQN\{symbol}-F-15-Min.csv')
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 912, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 577, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 1407, in __init__
    self._engine = self._make_engine(f, self.engine)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 1661, in _make_engine
    self.handles = get_handle(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\common.py", line 859, in get_handle
    handle = open(
FileNotFoundError: [Errno 2] No such file or directory: 'DQN\\XMRUSDT-F-15-Min.csv'

2023-10-15 20:09 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 378, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 338, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 197, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 136, in add_data
    pf = Record_Orders(strategy, self.formal).getpf()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\run_model.py", line 24, in __init__
    prices = app.get_test_net_work_data(symbol=strategy.symbol_name)  # len(prices.open) 2562
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\DataFeature.py", line 80, in get_test_net_work_data
    assert symbol == None, "formal model is on,symbol data can't be None"
AssertionError: formal model is on,symbol data can't be None

2023-10-15 20:15 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 378, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 338, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 197, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 136, in add_data
    pf = Record_Orders(strategy, self.formal).getpf()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\run_model.py", line 26, in __init__
    prices = app.get_test_net_work_data(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\DataFeature.py", line 80, in get_test_net_work_data
    assert symbol == None, "formal model is on,symbol data can't be None"
AssertionError: formal model is on,symbol data can't be None

2023-10-15 20:20 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 378, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 338, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 197, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 136, in add_data
    pf = Record_Orders(strategy, self.formal).getpf()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\run_model.py", line 26, in __init__
    prices = app.get_test_net_work_data(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\DataFeature.py", line 82, in get_test_net_work_data
    assert symbol_data == None, "formal model is on,symbol data can't be None"
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\core\generic.py", line 1466, in __nonzero__
    raise ValueError(
ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().

2023-10-15 20:25 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 378, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 338, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 197, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 136, in add_data
    pf = Record_Orders(strategy, self.formal).getpf()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\run_model.py", line 26, in __init__
    prices = app.get_test_net_work_data(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\DataFeature.py", line 89, in get_test_net_work_data
    out_dict.update({symbol: self.load_relative()})
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\DataFeature.py", line 23, in load_relative
    volume_change = self.calculate_volume_change(array_data[:, 5])
IndexError: index 5 is out of bounds for axis 1 with size 5

2023-10-15 20:32 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\core\indexes\base.py", line 3652, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'Datetime'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 378, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 338, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 197, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 136, in add_data
    pf = Record_Orders(strategy, self.formal).getpf()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\run_model.py", line 83, in __init__
    self.pf = Backtest.Backtest(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 43, in order_becktest
    datetime_list = self.Symbol_data['Datetime'].to_list()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\core\frame.py", line 3760, in __getitem__
    indexer = self.columns.get_loc(key)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\core\indexes\base.py", line 3654, in get_loc
    raise KeyError(key) from err
KeyError: 'Datetime'

