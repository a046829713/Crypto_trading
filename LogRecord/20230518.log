2023-05-18 09:23 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1880, in _execute_context
    self.dialect.do_executemany(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\dialects\mysql\mysqldb.py", line 193, in do_executemany
    rowcount = cursor.executemany(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 187, in executemany
    return self._do_execute_many(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 225, in _do_execute_many
    rows += self.execute(sql + postfix)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''highest_n1': '770.0e0', 'lowest_n2': '330.0e0', 'ATR_short1': '180.0e0', 'ATR_l' at line 1")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Database\SQL_operate.py", line 91, in write_Dateframe
    df.to_sql(symbol_name, con=conn, if_exists=exists)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\core\generic.py", line 2878, in to_sql
    return sql.to_sql(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 767, in to_sql
    return pandas_sql.to_sql(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1918, in to_sql
    total_inserted = sql_engine.insert_records(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1468, in insert_records
    raise err
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1459, in insert_records
    return table.insert(chunksize=chunksize, method=method)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1021, in insert
    num_inserted = exec_insert(conn, keys, chunk_iter)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 927, in _execute_insert
    result = conn.execute(self.table.insert(), data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1380, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\sql\elements.py", line 334, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1572, in _execute_clauseelement
    ret = self._execute_context(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1943, in _execute_context
    self._handle_dbapi_exception(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 2124, in _handle_dbapi_exception
    util.raise_(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\util\compat.py", line 210, in raise_
    raise exception
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1880, in _execute_context
    self.dialect.do_executemany(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\dialects\mysql\mysqldb.py", line 193, in do_executemany
    rowcount = cursor.executemany(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 187, in executemany
    return self._do_execute_many(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 225, in _do_execute_many
    rows += self.execute(sql + postfix)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.ProgrammingError: (pymysql.err.ProgrammingError) (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''highest_n1': '770.0e0', 'lowest_n2': '330.0e0', 'ATR_short1': '180.0e0', 'ATR_l' at line 1")
[SQL: INSERT INTO optimizeresult (`strategyName`, freq_time, size, fee, slippage, symbol, `Strategytype`, updatetime, `All_args`) VALUES (%(strategyName)s, %(freq_time)s, %(size)s, %(fee)s, %(slippage)s, %(symbol)s, %(Strategytype)s, %(updatetime)s, %(All_args)s)]
[parameters: ({'strategyName': 'AAVEUSDT-15K-OB', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'AAVEUSDT', 'Strategytype': 'TurtleStrategy', 'updatetime': '2023-03-22', 'All_args': {'highest_n1': 770.0, 'lowest_n2': 330.0, 'ATR_short1': 180.0, 'ATR_long2': 130.0}}, {'strategyName': 'AAVEUSDT-15K-OB-VCP', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'AAVEUSDT', 'Strategytype': 'VCPStrategy', 'updatetime': '2023-04-08', 'All_args': {'highest_n1': 700.0, 'lowest_n2': 550.0, 'std_n3': 90.0, 'volume_n3': 110.0}}, {'strategyName': 'ACHUSDT-15K-OB', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'ACHUSDT', 'Strategytype': 'TurtleStrategy', 'updatetime': '2023-03-28', 'All_args': {'highest_n1': 610.0, 'lowest_n2': 350.0, 'ATR_short1': 130.0, 'ATR_long2': 50.0}}, {'strategyName': 'ACHUSDT-15K-OB-VCP', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'ACHUSDT', 'Strategytype': 'VCPStrategy', 'updatetime': '2023-04-11', 'All_args': {'highest_n1': 300.0, 'lowest_n2': 600.0, 'std_n3': 50.0, 'volume_n3': 150.0}}, {'strategyName': 'ADAUSDT-15K-OB', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'ADAUSDT', 'Strategytype': 'TurtleStrategy', 'updatetime': '2023-03-14', 'All_args': {'highest_n1': 690.0, 'lowest_n2': 170.0, 'ATR_short1': 100.0, 'ATR_long2': 60.0}}, {'strategyName': 'ADAUSDT-15K-OB-VCP', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'ADAUSDT', 'Strategytype': 'VCPStrategy', 'updatetime': '2023-04-05', 'All_args': {'highest_n1': 700.0, 'lowest_n2': 50.0, 'std_n3': 110.0, 'volume_n3': 110.0}}, {'strategyName': 'AGIXUSDT-15K-OB', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'AGIXUSDT', 'Strategytype': 'TurtleStrategy', 'updatetime': '2023-03-28', 'All_args': {'highest_n1': 90.0, 'lowest_n2': 70.0, 'ATR_short1': 190.0, 'ATR_long2': 30.0}}, {'strategyName': 'AGIXUSDT-15K-OB-VCP', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'AGIXUSDT', 'Strategytype': 'VCPStrategy', 'updatetime': '2023-04-11', 'All_args': {'highest_n1': 50.0, 'lowest_n2': 50.0, 'std_n3': 60.0, 'volume_n3': 190.0}}  ... displaying 10 of 342 total bound parameter sets ...  {'strategyName': 'ZRXUSDT-15K-OB', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'ZRXUSDT', 'Strategytype': 'TurtleStrategy', 'updatetime': '2023-03-16', 'All_args': {'highest_n1': 670.0, 'lowest_n2': 390.0, 'ATR_short1': 110.0, 'ATR_long2': 80.0}}, {'strategyName': 'ZRXUSDT-15K-OB-VCP', 'freq_time': 15, 'size': 1.0, 'fee': 0.002, 'slippage': 0.0025, 'symbol': 'ZRXUSDT', 'Strategytype': 'VCPStrategy', 'updatetime': '2023-04-07', 'All_args': {'highest_n1': 650.0, 'lowest_n2': 400.0, 'std_n3': 130.0, 'volume_n3': 190.0}})]
(Background on this error at: https://sqlalche.me/e/14/f405)

2023-05-18 09:39 ERROR Traceback (most recent call last):
  File ".\TradeUi_TC.py", line 331, in <module>
    BeginTDsys = TradeUI('--autostart')
  File ".\TradeUi_TC.py", line 187, in __init__
    self.click_btn_trade()
  File ".\TradeUi_TC.py", line 230, in click_btn_trade
    self.BuildSysteam()
  File ".\TradeUi_TC.py", line 214, in BuildSysteam
    self.systeam = GUI_Trading_systeam(self)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 391, in __init__
    super().__init__()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 289, in __init__
    self.engine.Portfolio_online_register(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 224, in Portfolio_online_register
    strategypa = {"highest_n1": eachargdata['highest_n1'], "lowest_n2": eachargdata['lowest_n2'],
KeyError: 'highest_n1'

2023-05-18 09:40 ERROR Traceback (most recent call last):
  File ".\TradeUi_TC.py", line 331, in <module>
    BeginTDsys = TradeUI('--autostart')
  File ".\TradeUi_TC.py", line 187, in __init__
    self.click_btn_trade()
  File ".\TradeUi_TC.py", line 230, in click_btn_trade
    self.BuildSysteam()
  File ".\TradeUi_TC.py", line 214, in BuildSysteam
    self.systeam = GUI_Trading_systeam(self)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 391, in __init__
    super().__init__()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 289, in __init__
    self.engine.Portfolio_online_register(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 225, in Portfolio_online_register
    strategypa = {"highest_n1": eachargdata['highest_n1'], "lowest_n2": eachargdata['lowest_n2'],
KeyError: 'highest_n1'

2023-05-18 09:41 ERROR Traceback (most recent call last):
  File ".\TradeUi_TC.py", line 331, in <module>
    BeginTDsys = TradeUI('--autostart')
  File ".\TradeUi_TC.py", line 187, in __init__
    self.click_btn_trade()
  File ".\TradeUi_TC.py", line 230, in click_btn_trade
    self.BuildSysteam()
  File ".\TradeUi_TC.py", line 214, in BuildSysteam
    self.systeam = GUI_Trading_systeam(self)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 391, in __init__
    super().__init__()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 289, in __init__
    self.engine.Portfolio_online_register(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 227, in Portfolio_online_register
    strategypa = {"highest_n1": eachargdata['highest_n1'], "lowest_n2": eachargdata['lowest_n2'],
KeyError: 'highest_n1'

2023-05-18 09:43 ERROR Traceback (most recent call last):
  File ".\TradeUi_TC.py", line 331, in <module>
    BeginTDsys = TradeUI('--autostart')
  File ".\TradeUi_TC.py", line 187, in __init__
    self.click_btn_trade()
  File ".\TradeUi_TC.py", line 230, in click_btn_trade
    self.BuildSysteam()
  File ".\TradeUi_TC.py", line 214, in BuildSysteam
    self.systeam = GUI_Trading_systeam(self)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 391, in __init__
    super().__init__()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 289, in __init__
    self.engine.Portfolio_online_register(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 234, in Portfolio_online_register
    strategypa = {"highest_n1": eachargdata['highest_n1'], "lowest_n2": eachargdata['lowest_n2'],
KeyError: 'highest_n1'

2023-05-18 09:44 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 334, in main
    pf = self.engine.Portfolio_online_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\utils\TimeCountMsg.py", line 10, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 238, in Portfolio_online_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 599, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 531, in add_data
    ordermap.set_parameter(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 362, in set_parameter
    self.highestarr = vecbot_count.max_rolling(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\Base.py", line 202, in max_rolling
    raise e
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\Base.py", line 193, in max_rolling
    rolling = np.lib.stride_tricks.as_strided(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\numpy\lib\stride_tricks.py", line 105, in as_strided
    array = np.asarray(DummyArray(interface, base=x))
TypeError: 'float' object cannot be interpreted as an integer

2023-05-18 09:54 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 334, in main
    pf = self.engine.Portfolio_online_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\utils\TimeCountMsg.py", line 10, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 238, in Portfolio_online_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 600, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 532, in add_data
    ordermap.set_parameter(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 363, in set_parameter
    self.highestarr = vecbot_count.max_rolling(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\Base.py", line 202, in max_rolling
    raise e
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\Base.py", line 193, in max_rolling
    rolling = np.lib.stride_tricks.as_strided(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\numpy\lib\stride_tricks.py", line 105, in as_strided
    array = np.asarray(DummyArray(interface, base=x))
TypeError: 'float' object cannot be interpreted as an integer

2023-05-18 10:01 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 334, in main
    pf = self.engine.Portfolio_online_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\utils\TimeCountMsg.py", line 10, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 238, in Portfolio_online_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 611, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 545, in add_data
    pf = ordermap.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 427, in logic_order
    orders, marketpostion_array, entryprice_array, buy_Fees_array, sell_Fees_array, OpenPostionprofit_array, ClosedPostionprofit_array, profit_array, Gross_profit_array, Gross_loss_array, all_Fees_array, netprofit_array = nb.logic_order(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\numba\core\dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\numba\core\dispatcher.py", line 409, in error_rewrite
    raise e.with_traceback(None)
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
[1m[1m[1m[1m[1m[1m[1m[1m[1m[1mFailed in nopython mode pipeline (step: nopython frontend)
[1m[1mNo implementation of function Function(<built-in function neg>) found for signature:
 
 >>> neg(none)
 
There are 8 candidate implementations:
[1m  - Of which 6 did not match due to:
  Overload of function 'neg': File: <numerous>: Line N/A.
    With argument(s): '(none)':[0m
[1m   No match.[0m
[1m  - Of which 2 did not match due to:
  Operator Overload in function 'neg': File: unknown: Line unknown.
    With argument(s): '(none)':[0m
[1m   No match for registered cases:
    * (uint8,) -> uint64
    * (uint16,) -> uint64
    * (uint32,) -> uint64
    * (uint64,) -> uint64
    * (int8,) -> int64
    * (int16,) -> int64
    * (int32,) -> int64
    * (int64,) -> int64
    * (float32,) -> float32
    * (float64,) -> float64
    * (complex64,) -> complex64
    * (complex128,) -> complex128
    * (bool,) -> int64[0m
[0m
[0m[1mDuring: typing of intrinsic-call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (57)[0m
[1m
File "Count\nb.py", line 57:[0m
[1m    def moving_average(a, n=3):
        <source elided>
        ret = np.cumsum(a)
[1m        ret[n:] = ret[n:] - ret[:-n]
[0m        [1m^[0m[0m

[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x000001B2B7220EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (489)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x000001B2B7220EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (492)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x000001B2B7220EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (489)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x000001B2B7220EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (492)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x000001B2B7220EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (489)
[0m
[1m
File "Count\nb.py", line 489:[0m
[1mdef logic_order(
    <source elided>
        # 迴圈可以先產生的資料
[1m        ATR_short = get_ATR(
[0m        [1m^[0m[0m


2023-05-18 10:06 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 334, in main
    pf = self.engine.Portfolio_online_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\utils\TimeCountMsg.py", line 10, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 238, in Portfolio_online_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 612, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 546, in add_data
    pf = ordermap.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 428, in logic_order
    orders, marketpostion_array, entryprice_array, buy_Fees_array, sell_Fees_array, OpenPostionprofit_array, ClosedPostionprofit_array, profit_array, Gross_profit_array, Gross_loss_array, all_Fees_array, netprofit_array = nb.logic_order(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\numba\core\dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\numba\core\dispatcher.py", line 409, in error_rewrite
    raise e.with_traceback(None)
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
[1m[1m[1m[1m[1m[1m[1m[1m[1m[1mFailed in nopython mode pipeline (step: nopython frontend)
[1m[1mNo implementation of function Function(<built-in function neg>) found for signature:
 
 >>> neg(none)
 
There are 8 candidate implementations:
[1m  - Of which 6 did not match due to:
  Overload of function 'neg': File: <numerous>: Line N/A.
    With argument(s): '(none)':[0m
[1m   No match.[0m
[1m  - Of which 2 did not match due to:
  Operator Overload in function 'neg': File: unknown: Line unknown.
    With argument(s): '(none)':[0m
[1m   No match for registered cases:
    * (uint8,) -> uint64
    * (uint16,) -> uint64
    * (uint32,) -> uint64
    * (uint64,) -> uint64
    * (int8,) -> int64
    * (int16,) -> int64
    * (int32,) -> int64
    * (int64,) -> int64
    * (float32,) -> float32
    * (float64,) -> float64
    * (complex64,) -> complex64
    * (complex128,) -> complex128
    * (bool,) -> int64[0m
[0m
[0m[1mDuring: typing of intrinsic-call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (57)[0m
[1m
File "Count\nb.py", line 57:[0m
[1m    def moving_average(a, n=3):
        <source elided>
        ret = np.cumsum(a)
[1m        ret[n:] = ret[n:] - ret[:-n]
[0m        [1m^[0m[0m

[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x0000019C68572EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (489)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x0000019C68572EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (492)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x0000019C68572EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (489)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x0000019C68572EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (492)
[0m
[0m[1mDuring: resolving callee type: type(CPUDispatcher(<function get_ATR at 0x0000019C68572EE0>))[0m
[0m[1mDuring: typing of call at C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Count\nb.py (489)
[0m
[1m
File "Count\nb.py", line 489:[0m
[1mdef logic_order(
    <source elided>
        # 迴圈可以先產生的資料
[1m        ATR_short = get_ATR(
[0m        [1m^[0m[0m


2023-05-18 10:11 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 334, in main
    pf = self.engine.Portfolio_online_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\utils\TimeCountMsg.py", line 10, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Vecbot_backtest.py", line 238, in Portfolio_online_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 607, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 539, in add_data
    ordermap.set_parameter(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Base\Strategy_base.py", line 366, in set_parameter
    self.std_n3 = int(self.parameter.get('std_n3', np.nan))
ValueError: cannot convert float NaN to integer

