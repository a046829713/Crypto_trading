2023-10-20 10:23 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 373, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 345, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 201, in logic_order
    self.time_min_scale()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\utils\TimeCountMsg.py", line 10, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 133, in time_min_scale
    all_datetimes.extend(strategy.get_datetimes(fast_type=True))
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\common.py", line 246, in get_datetimes
    self.check_if_df_exits(fast_type=fast_type)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\common.py", line 211, in check_if_df_exits
    self.df = pd.read_csv(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 912, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 577, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 1407, in __init__
    self._engine = self._make_engine(f, self.engine)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 1661, in _make_engine
    self.handles = get_handle(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\common.py", line 859, in get_handle
    handle = open(
FileNotFoundError: [Errno 2] No such file or directory: 'DQN\\ANTUSDT-F-15-Min.csv'

2023-10-20 10:41 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 373, in main
    pf = self.engine.Portfolio_start()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 346, in Portfolio_start
    pf = self.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 202, in logic_order
    self.time_min_scale()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 132, in time_min_scale
    all_datetimes.extend(strategy.get_datetimes(fast_type=True))
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\common.py", line 246, in get_datetimes
    self.check_if_df_exits(fast_type=fast_type)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\common.py", line 211, in check_if_df_exits
    self.df = pd.read_csv(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 912, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 577, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 1407, in __init__
    self._engine = self._make_engine(f, self.engine)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\parsers\readers.py", line 1661, in _make_engine
    self.handles = get_handle(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\common.py", line 859, in get_handle
    handle = open(
FileNotFoundError: [Errno 2] No such file or directory: 'DQN\\BANDUSDT-F-15-Min.csv'

2023-10-20 15:19 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 381, in main
    self.check_money_level()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 261, in check_money_level
    self.change_money()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 243, in change_money
    self.engine.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 226, in logic_order
    self.add_data()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 170, in add_data
    if datetime_ in pf.order.index:
UnboundLocalError: local variable 'pf' referenced before assignment

2023-10-20 15:21 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 381, in main
    self.check_money_level()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 261, in check_money_level
    self.change_money()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 243, in change_money
    self.engine.Trader.logic_order()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 228, in logic_order
    self.time_min_scale()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\DQN\lib\Backtest.py", line 172, in add_data
    for datetime_ in strategy.df.index:
UnboundLocalError: local variable 'pf' referenced before assignment

2023-10-20 15:27 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 407, in main
    self.dataprovider_online.Binanceapp.execute_orders(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 39, in warpper
    result = func(self, client, *args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 494, in execute_orders
    if (float(current_size[each_symbol]) + ready_to_order_size) * symbol_map[each_symbol]['Close'].iloc[-1] < float(Response['maxNotionalValue']):
KeyError: 'XMRUSDT'

2023-10-20 15:54 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 405, in main
    self.dataprovider_online.Binanceapp.execute_orders(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 39, in warpper
    result = func(self, client, *args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 494, in execute_orders
    if (float(current_size[each_symbol]) + ready_to_order_size) * symbol_map[each_symbol]['Close'].iloc[-1] < float(Response['maxNotionalValue']):
KeyError: 'XMRUSDT'

2023-10-20 16:02 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 407, in main
    self.dataprovider_online.Binanceapp.execute_orders(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 39, in warpper
    result = func(self, client, *args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 494, in execute_orders
    if (float(current_size[each_symbol]) + ready_to_order_size) * symbol_map[each_symbol]['Close'].iloc[-1] < float(Response['maxNotionalValue']):
KeyError: 'XMRUSDT'

2023-10-20 16:04 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 407, in main
    self.dataprovider_online.Binanceapp.execute_orders(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 39, in warpper
    result = func(self, client, *args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 494, in execute_orders
    if (float(current_size[each_symbol]) + ready_to_order_size) * symbol_map[each_symbol]['Close'].iloc[-1] < float(Response['maxNotionalValue']):
KeyError: 'XMRUSDT'

2023-10-20 16:09 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 407, in main
    self.dataprovider_online.Binanceapp.execute_orders(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 39, in warpper
    result = func(self, client, *args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 494, in execute_orders
    if (float(current_size[each_symbol]) + ready_to_order_size) * symbol_map[each_symbol]['Close'].iloc[-1] < float(Response['maxNotionalValue']):
KeyError: 'XMRUSDT'

2023-10-20 16:20 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Trading_Systeam.py", line 412, in main
    self.dataprovider_online.Binanceapp.execute_orders(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 39, in warpper
    result = func(self, client, *args, **kwargs)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Data\custom.py", line 494, in execute_orders
    if (float(current_size[each_symbol]) + ready_to_order_size) * symbol_map[each_symbol]['Close'].iloc[-1] < float(Response['maxNotionalValue']):
KeyError: 'XMRUSDT'

2023-10-20 19:31 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1900, in _execute_context
    self.dialect.do_execute(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1050, "Table 'optimizeresult' already exists")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Database\SQL_operate.py", line 54, in change_db_data
    conn.execute(text(text_msg))
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1380, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\sql\elements.py", line 334, in _execute_on_connection
    return connection._execute_clauseelement(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1572, in _execute_clauseelement
    ret = self._execute_context(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1943, in _execute_context
    self._handle_dbapi_exception(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 2124, in _handle_dbapi_exception
    util.raise_(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\util\compat.py", line 210, in raise_
    raise exception
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1900, in _execute_context
    self.dialect.do_execute(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1050, "Table 'optimizeresult' already exists")
[SQL: 
            CREATE TABLE `optimizeresult` (
            `strategyName` varchar(30) NOT NULL,
            `freq_time` int NOT NULL,
            `size` decimal(10,5) NOT NULL,
            `fee` decimal(10,5) NOT NULL,
            `slippage` decimal(10,5) NOT NULL,
            `symbol` varchar(20) NOT NULL,
            `Strategytype` varchar(20) NOT NULL,
            `updatetime` date NOT NULL,
            `All_args` varchar(500) DEFAULT NULL,
            PRIMARY KEY (`strategyName`)
            ) ;


        ]
(Background on this error at: https://sqlalche.me/e/14/e3q8)

2023-10-20 19:31 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1900, in _execute_context
    self.dialect.do_execute(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'crypto_data.avgloss' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Database\SQL_operate.py", line 80, in read_Dateframe
    return pd.read_sql(text_msg, con=conn)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 661, in read_sql
    return pandas_sql.read_query(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1736, in read_query
    result = self.execute(sql, params)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1560, in execute
    return self.con.exec_driver_sql(sql, *args)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1760, in exec_driver_sql
    return self._exec_driver_sql(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1669, in _exec_driver_sql
    ret = self._execute_context(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1943, in _execute_context
    self._handle_dbapi_exception(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 2124, in _handle_dbapi_exception
    util.raise_(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\util\compat.py", line 210, in raise_
    raise exception
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1900, in _execute_context
    self.dialect.do_execute(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.ProgrammingError: (pymysql.err.ProgrammingError) (1146, "Table 'crypto_data.avgloss' doesn't exist")
[SQL: select strategyName, symbol from avgloss]
(Background on this error at: https://sqlalche.me/e/14/f405)

2023-10-21 02:41 ERROR Traceback (most recent call last):
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1900, in _execute_context
    self.dialect.do_execute(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'crypto_data.bsvusdt-f' doesn't exist")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\user\Desktop\程式專區\TradingSysteam\Crypto_trading\Database\SQL_operate.py", line 80, in read_Dateframe
    return pd.read_sql(text_msg, con=conn)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 661, in read_sql
    return pandas_sql.read_query(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1736, in read_query
    result = self.execute(sql, params)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pandas\io\sql.py", line 1560, in execute
    return self.con.exec_driver_sql(sql, *args)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1760, in exec_driver_sql
    return self._exec_driver_sql(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1669, in _exec_driver_sql
    ret = self._execute_context(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1943, in _execute_context
    self._handle_dbapi_exception(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 2124, in _handle_dbapi_exception
    util.raise_(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\util\compat.py", line 210, in raise_
    raise exception
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\base.py", line 1900, in _execute_context
    self.dialect.do_execute(
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\sqlalchemy\engine\default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 158, in execute
    result = self._query(query)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\cursors.py", line 325, in _query
    conn.query(q)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 549, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 779, in _read_query_result
    result.read()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 1157, in read
    first_packet = self.connection._read_packet()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\connections.py", line 729, in _read_packet
    packet.raise_for_error()
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "C:\Users\user\Desktop\程式專區\TradingSysteam\lib\site-packages\pymysql\err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.ProgrammingError: (pymysql.err.ProgrammingError) (1146, "Table 'crypto_data.bsvusdt-f' doesn't exist")
[SQL: select Datetime, Open, High, Low, Close, Volume from `bsvusdt-f`;]
(Background on this error at: https://sqlalche.me/e/14/f405)

